abal3[1:10,]
abal3<-abal[,2:9]
abal3[1:10,]
abal3<-abal[,2:9]
plot(abal3)
summary(abal)
describe(abal)
library(plotly)
install.packages("plotly")
library(plotly)
plot_ly(abal, x = ~Length, y = ~Diameter, z = ~Rings, color = ~Sex, type = "scatter3d")
install.packages("lattice")
install.packages("lattice")
library(lattice)
wireframe(Rings ~ Length * Diameter | Sex, data = abal)
libary(corrplot)
library(corrplot)
abal3[1:10,]
abal3cor<- cor(abal3)
abal3cor
corrplot::corrplot(abal3cor)
abal3.k2<-kmeans(abal3, centers=2)
str(abal3.k2)
abal3.k2
library(factoextra)
factoextra: factoextra::fviz_cluster(abal3.k2,abal3)
factoextra::fviz_cluster(abal3.k2,abal3)
abal3.k3<-kmeans(abal3, centers=3)
abal3.k3
factoextra::fviz_cluster(abal3.k3,abal3)
abal3[1:10,]
abal3.k4<-kmeans(abal3, centers=4)
abal3.k4
factoextra::fviz_cluster(abal3.k4,abal3)
abal3.k5<-kmeans(abal3, centers=5)
abal3.k5
factoextra::fviz_cluster(abal3.k5,abal3)
abal3.k6<-kmeans(abal3, centers=6)
abal3.k6
factoextra::fviz_cluster(abal3.k6,abal3)
abal3.k7<-kmeans(abal3, centers=7)
abal3.k7
factoextra::fviz_cluster(abal3.k7,abal3)
abal3.k8<-kmeans(abal3, centers=8)
abal3.k8
abal3.k9<-kmeans(abal3, centers=9)
abal3.k9
factoextra::fviz_cluster(abal3.k9,abal3)
abal3.k10<-kmeans(abal3, centers=10)
abal3.l10
abal3.k10
abal3.k11<-kmeans(abal3, centers=11)
abal3.k11
abal3.k12<-kmeans(abal3, centers=12)
abal3.k12
factoextra::fviz_cluster(abal3.k12,abal3)
wssplot <- function (data, nc=15, seed-1234)
wssplot <- function (data, nc=15, seed-1234) {
wssplot <- function (data, nc=15, seed-1234) {
wssplot <- function (data, nc=15, seed=1234) {
wss <- (nrow (data)-1) sum(apply (data, 2, var)) for (i in 2nc)
wssplot <- function (data, nc=15, seed=1234)
{
wss <- (nrow (data)-1) *sum(apply (data, 2, var)) for (i in 2nc)
wssplot <- function (data, nc=15, seed=1234)
{
wss <- (nrow (data)-1) *sum(apply (data, 2, var))
for (i in 2:nc)
{
set. seed (seed)
wssplot <- function (data, nc=15, seed=1234)
{
wss <- (nrow (data)-1) *sum(apply (data, 2, var))
for (i in 2:nc)
{
set.seed (seed)
Wss [i] <- sum(kmeans (data, centers=i)swithinss) plot (1:nc, wss, type="b"
wssplot <- function (data, nc=15, seed=1234)
{
wss <- (nrow (data)-1) *sum(apply (data, 2, var))
for (i in 2:nc)
{
set.seed (seed)
Wss [i] <- sum(kmeans (data, centers=i)swithinss)
wssplot <- function (data, nc=15, seed=1234)
{
wss <- (nrow (data)-1) *sum(apply (data, 2, var))
for (i in 2:nc)
{
set.seed (seed)
wss [i] <- sum(kmeans (data, centers=i)swithinss)
wssplot <- function (data, nc=15, seed=1234)
{
wss <- (nrow (data)-1) *sum(apply (data, 2, var))
for (i in 2:nc)
{
set.seed (seed)
wss [i] <- sum(kmeans (data, centers=i)$withinss)
}
plot (1:nc, wss, type="b"
xlab="Number of clusters"
wssplot <- function (data, nc=15, seed=1234)
{
wss <- (nrow (data)-1) *sum(apply (data, 2, var))
for (i in 2:nc)
{
set.seed (seed)
wss [i] <- sum(kmeans (data, centers=i)$withinss)
}
plot (1:nc, wss, type="b",
xlab="Number of clusters",
ylab='Within groups sum of squares")
}
wssplot <- function (data, nc=15, seed=1234)
{
wss <- (nrow (data)-1) *sum(apply (data, 2, var))
for (i in 2:nc)
{
set.seed (seed)
wss [i] <- sum(kmeans (data, centers=i)$withinss)
}
plot (1:nc, wss, type="b",
xlab="Number of clusters",
ylab='Within groups sum of squares")
}
wssplot <- function (data, nc=15, seed=1234) {
wss<- (nrow(data)-1) * sum(apply(data,2,var))
for(i in 2:nc) {
set.seed(seed)
wss[i] <- sum(kmeans(data, centers=i)$withinss)
}
plot(1:nc, wss, type="b", xlab="Number of clusters", ylab="Within groups sum of squares")
}
wssplot(abal3, nc=4, seed=1234)
factoextra::fviz_nbclust(abal3, FUNcluster = kmeans, method= "wss", k.max=10, verbose=TRUE)
wssplot(abal3, nc=12, seed=1234)
seacrh()
search()
library(sna)
library(psych)
library(factoextra)
library(plotly)
library(ggplot2)
library(corrplot)
library(lattice)
abal[1:10,]
heatmap(abal)
abal3[1:10,]
heatmap(abal3)
str(abal3)
abal4 <-  abal3
abal4$Rings <- as.numeric(abal4$Rings)
str(abal4)
abal[1:10,]
abal4[1:10,]
heatmap(abal4)
plot_ly(z=abal4, type="heatmap")
plot_ly(abal, x = ~Whole weight, y = ~Shucked weight, z = ~Rings, color = ~Sex, type = "scatter3d")
plot_ly(abal, x = ~Whole_weight, y = ~Shucked weight, z = ~Rings, color = ~Sex, type = "scatter3d")
plot_ly(abal, x = ~Whole_weight, y = ~Shucked_weight, z = ~Rings, color = ~Sex, type = "scatter3d")
plot_ly(abal, x = ~`Whole weight`, y = ~`Shucked weight`, z = ~Rings, color = ~Sex, type = "scatter3d")
plot_ly(abal, x = ~`Viscera weight`, y = ~`Shell weight`, z = ~Rings, color = ~Sex, type = "scatter3d")
plot(abal4)
abal <- subset(abal4, select = c("Height", "Whole weight", "Viscera weight", "Shell weight", "Rings"))
abal <- read.table("abalone.data", stringsAsFactors = FALSE, sep = ",")
names(abal) <- abal.names
abal[1:10,]
abal5 <- subset(abal4, select = c("Height", "Whole weight", "Viscera weight", "Shell weight", "Rings"))
abal5[1:10,]
abal5 <- subset(abal4, select = c("Height", "Whole weight", "Viscera weight", "Shell weight", "Rings"))
abal5 <- subset(abal4, select = c("Height", "Whole weight", "Viscera weight", "Shell weight", "Rings"))
abal5[1:10,]
abal5.k2<-kmeans(abal5, centers=2)
abal5.k2
factoextra::fviz_nbclust(abal5, FUNcluster = kmeans, method= "wss", k.max=10, verbose=TRUE)
abal5.k2<-kmeans(abal5, centers=7)
abal5.k2<-kmeans(abal5, centers=2)
abal5.k7<-kmeans(abal5, centers=7)
abal5
abal5.k7
factoextra::fviz_cluster(abal5.k7,abal5)
plot(abal5)
abal3.k7
abal5.k6<-kmeans(abal5, centers=6)
abal5.k6
abal5.k8<-kmeans(abal5, centers=8)
abal5.k8
abal5.k9<-kmeans(abal5, centers=9)
abal5.k9
abal5.k10<-kmeans(abal5, centers=10)
abal5.k10
abal5.k11<-kmeans(abal5, centers=11)
abal5.k11
abal5.k13<-kmeans(abal5, centers=13)
abal5.k13
abal5.k9
abal5.k8
abal5.k2<-kmeans(abal5, centers=2)
abal5.k2
factoextra::fviz_cluster(abal5.k2,abal5)
abal5.k3<-kmeans(abal5, centers=3)
abal5.k3
abal5.k4<-kmeans(abal5, centers=4)
abal5.l4
abal5.k4
abal5.k5<-kmeans(abal5, centers=5)
abal5.k5
abal5.k6<-kmeans(abal5, centers=6)
abal5.k6
abal5.k7
abal5.8
abal5.k8
abal5.k9
abal5.k10
abal3.k2
abal3.k3
abal3.k4
abal3.k5
abal3.k6
abal3.k7
abal3.k8
abal3.k9
abal3.k10
abal3.k11
wssplot(abal3, nc=11, seed=1234)
abal5.k2<-kmeans(abal5, centers=2)
abal3[1:10,]
abal2[1:10,]
abal[1:10,]
abal2.k13<-kmeans(abal5, centers=2)
abal.k2<-kmeans(abal, centers=2)
abal.k2
abal2.k2<-kmeans(abal2, centers=2)
abal2.k2
abal2.k3<-kmeans(abal2, centers=3)
abal2.k3
abal2.k4<-kmeans(abal2, centers=4)
abal2.k4
abal2.k5<-kmeans(abal2, centers=5)
abal2.k5
abal2.k6<-kmeans(abal2, centers=6)
abal2.k6
abal2.k7<-kmeans(abal2, centers=7)
abal2.k7
abal2.k8<-kmeans(abal2, centers=8)
abal2.k8
abal2.k9<-kmeans(abal2, centers=9)
abal2.k9
abal2.k10<-kmeans(abal2, centers=10)
abal2.k10
wssplot(abal2, nc=10, seed=1234)
factoextra::fviz_nbclust(abal2, FUNcluster = kmeans, method= "wss", k.max=10, verbose=TRUE)
factoextra::fviz_cluster(abal2.k2,abal2)
factoextra::fviz_cluster(abal2.k3,abal2)
factoextra::fviz_cluster(abal3.k2,abal3)
factoextra::fviz_cluster(abal2.k2,abal2)
plot(abal2)
abal3.k2 <- kmeans(abal3, centers=2)
abal3.k2
abal3.k3
abal3.k4
abal3.k5
abal3.k6
abal3.k7
abal3.k8
abal3.k9
abal3.k10
wssplot(abal3, nc=10, seed=1234)
factoextra::fviz_nbclust(abal3, FUNcluster = kmeans, method= "wss", k.max=10, verbose=TRUE)
factoextra::fviz_cluster(abal3.k6,abal3)
factoextra::fviz_cluster(abal3.k8,abal3)
factoextra::fviz_cluster(abal3.k10,abal3)
boxplot(abal3$`Whole weight`, main="Box plot of Whole weight", ylab="Weight (grams)")
abal3[1:10,]
boxplot(abal3$`Shucked weight`, main="Box plot of Whole weight", ylab="Weight (grams)")
boxplot(abal3$`Shell weight`, main="Box plot of Whole weight", ylab="Weight (grams)")
boxplot(abal3$`Length`, main="Box plot of Whole weight", ylab="Weight (grams)")
q1 <- quantile(abal$`Whole weight`, 0.25)
q3 <- quantile(abal$`Whole weight`, 0.75)
iqr <- q3 - q1
lower <- q1 - 1.5*iqr
upper <- q3 + 1.5*iqr
outliers <- subset(abal, `Whole weight` < lower | `Whole weight` > upper)
outliers
boxplot(abal3$`Whole weight`, main="Box plot of Whole weight", ylab="Weight (grams)")
abal3_filtered <- subset(abal3, `Whole weight` >= lower & `Whole weight` <= upper)
abal3_filtered[1:10,]
plot(abal3_filtered)
abal3_filtered.k2<-kmeans(abal3_filtered, centers=2)
abal3_filtered.k2
factoextra::fviz_cluster(abal3_filtered.k2,abal3_filtered)
3149
2152
abal3[3149,]
abal3[2152,]
abal3.k7$centers
abal3[3925,]
abal3[376,]
abal3[278,]
abal3[2181,]
abal3[622,]
abal3[2345,]
summary(abal3)
abal5[1:10,]
factoextra::fviz_cluster(abal5.k2,abal5)
abal6 <- subset(abal4, select = c("Length", "Diameter", "Height", "Whole weight", "Viscera weight", "Shell weight", "Rings"))
abal6[1:10,]
abal6.k2 <- kmeans(abal6, centers=2)
factoextra::fviz_cluster(abal6.k2,abal6)
abal6.k7 <- kmeans(abal6, centers=7)
factoextra::fviz_cluster(abal6.k7,abal6)
abal.k7 <- kmeans(abal, centers=7)
abal6.rows = nrow(abal6)
abal6.sample=0.7
abal6.rowsnum = nrow(abal6)
abal6.sample=0.7
abal6.rows= abal6.sample * abal6.rowsnum
abal6.rows
abal6.train.index= sample(abal6.rowsnum, abal6.rows)
length(abal6.train.index)
abal6.train= abal6[abal6.train.index,]
abal6.train[1:20,]
abal6.test= abal6[-abal6.train.index,]
abal6.test[1:20,]
abal6.train.k7= kmeans(abal6.train, centers=7)
abal6.train.k7
library(class)
abal6.test.k7= knn(abal6.train, abal6.test, abal6.train.k7$cluster, k=7)
abal6.test.k7
abal6.test.kmeans.k7= kmeans(abal6.test, centers=7)
abal6.test.kmeans.k7
abal6.test.k7.labels= abal6.test.kmeans.k7$cluster
length(abal6.test.k7.labels)
abal6.test.k7.labels
abal6.train.glm= glm(formula=abal6.train$Rings)
abal6.train.glm= glm(formula=abal6.train$Rings~ abal6.train$Length + abal6.train$Diameter + abal6.train$Height + abal6.train$`Whole weight`+ abal6.train$`Viscera weight`+ abal6.train$`Shell weight`, family=gaussian, data=abal6.train)
summary(abal6.train.glm)
abal6.train.glm.anova= anova(abal6.train.glm, test="Chisq")
abal6.train.glm.anova
plot(abal6.train.glm)
abal6.test.pred= predict(abal6.train.glm, newdata= abal6.test)
abal6.test.pred
summary(abal6.test.pred)
confint(abal6.train.glm)
abal6.test.pred.k7= kmeans(abal6.test.pred, centers=7)
abal6.test.pred.k7
abal6.test.ct.k7= CrossTable(abal6.test.pred.k7$cluster, abal6.test.kmeans.k7$cluster, prop.chisq=TRUE)
install.packages("gmodels")
library(gmodels)
abal6.test.ct.k7= CrossTable(abal6.test.pred.k7$cluster, abal6.test.kmeans.k7$cluster, prop.chisq=TRUE)
length(abal6.test.kmeans.k7)
length(abal6.test.pred.k7)
length(abal6.test.kmeans.k7$cluster)
length(abal6.test.pred.k7$cluster)
abal6.test.kmeans.k7= kmeans(abal6.test, centers=7)
length(abal6.test.kmeans.k7$cluster)
abal6.test.pred= predict(abal6.train.glm, newdata= abal6.test)
length(abal6.test)
length(abal6.train.glm)
abal6.test
nrow(abal6.test)
nrow(abal6.train.glm)
abal6.train.glm
abal6.test.ct.k7= CrossTable(abal6.test.pred.k7$cluster, abal6.test.kmeans.k7$cluster, prop.chisq=TRUE)
length(abal6.test.kmeans.k7)
length(abal6.test.kmeans.k7$cluster)
length(abal6.test.pred.k7$cluster)
abal6.test.pred
length(abal6.test.pred)
nrow(abal6.test)
nrow(abal6.train)
abal6.test.pred= predict(abal6.train.glm, newdata= abal6.test)
abal6.test.pred
abal6.test.pred= predict(abal6.train.glm, newdata= abal6.test)
abal6.train
abal6.test
abal6.test.ct.k7= CrossTable(abal6.test.pred.k7$cluster, abal6.test.kmeans.k7$cluster, prop.chisq=TRUE)
abal6.test.pred= predict(abal6.train.glm, newdata= abal6.test)
abal6.test.pred
length(abal6.test.pred)
abal7.test.pred[-2900,]
abal6.test.pred[-2900,]
abal6.test.pred[-10,]
abal6.test.pred[-1:10,]
abal6.test.pred[1:-10,]
tail(abal6.test.pred, n =10)
abal6.test.pred= predict(abal6.train.glm, newdata= abal6.test)
abal6.test.pred.k7= kmeans(abal6.test.pred, centers=7)
abal6.test.pred.k7
abal6.test.pred.k7$cluster
length(abal6.test.pred.k7$cluster)
abal6.test.ct.k7= CrossTable(abal6.test.pred.k7$cluster, abal6.test.kmeans.k7$cluster, prop.chisq=TRUE)
abal6.test.kmeans.k7
abal6.test.kmeans.k7= kmeans(abal6.test, centers=7)
abal6.test.ct.k7= CrossTable(abal6.test.pred.k7$cluster, abal6.test.kmeans.k7$cluster, prop.chisq=TRUE)
abal6.train.glm= glm(formula=Rings~ Length + Diameter + Height + `Whole weight`+ `Viscera weight`+ `Shell weight`, family=gaussian, data=abal6.train)
summary(abal6.train.glm)
abal6.test.pred= predict(abal6.train.glm, newdata= abal6.test)
abal6.test.pred.k7= kmeans(abal6.test.pred, centers=7)
abal6.test.ct.k7= CrossTable(abal6.test.pred.k7$cluster, abal6.test.kmeans.k7$cluster, prop.chisq=TRUE)
library(gmodels)
abal6.test.ct.k7= CrossTable(abal6.test.pred.k7$cluster, abal6.test.kmeans.k7$cluster, prop.chisq=TRUE)
plot(abal6.test$Rings, abal6.test.pred)
conf_mat=abal6.test.ct.k7$t
conf_mat
accuracy <- sum(diag(conf_mat)) / sum(conf_mat)
precision <- diag(conf_mat) / colSums(conf_mat)
recall <- diag(conf_mat) / rowSums(conf_mat)
specificity <- sapply(1:nrow(conf_mat), function(i) {
TN <- sum(conf_mat[-i, -i])
FP <- sum(conf_mat[-i, i])
TN / (TN + FP)
})
error <- 1 - accuracy
accuracy
precision
recall
specificity
error
abal7<-abal6
abal7.rows= nrow(abal7)
abal7.sample=0.6
abal7.rowsnum= nrow(abal7)
abal7.rows= abal7.sample* abal7.rowsnum
abal7.rows
abal7.train.index= sample(abal7.rowsnum, abal7.rows)
length(abal6.train.index)
abal6.train= abal6[abal6.train.index,]
abal6.test= abal6[-abal6.train.index,]
length(abal7.train.index)
abal7.train= abal7[abal7.train.index,]
abal7.test= abal7[-abal7.train.index,]
abal7.train.k7= kmeans(abal7.train, centers=7)
abal7.train.k7
abal7.test.k7= knn(abal7.train, abal7.test, abal7.train.k7$cluster, k=7)
library(class)
abal7.test.k7= knn(abal7.train, abal7.test, abal7.train.k7$cluster, k=7)
abal7.test.k7
abal7.test.kmeans.k7= kmeans(abal7.test, centers=7)
abal7.test.kmeans.k7
abal7.test.k7.labels= abal7.test.kmeans.k7$cluster
length(abal7.test.k7.labels)
abal7.test.k7.labels
abal7.train.glm= glm(formula=Rings~ Length + Diameter + Height + `Whole weight`+ `Viscera weight`+ `Shell weight`, family=gaussian, data=abal7.train)
summary(abal7.train.glm)
abal7.train.glm.anova= anova(abal7.train.glm, test="Chisq")
abal7.train.glm.anova
plot(abal7.train.glm)
abal7.test.pred= predict(abal7.train.glm, newdata= abal7.test)
abal7.test.pred
summary(abal7.test.pred)
confint(abal7.train.glm)
abal7.test.pred.k7= kmeans(abal7.test.pred, centers=7)
abal7.test.pred.k7
abal7.test.ct.k7= CrossTable(abal7.test.pred.k7$cluster, abal7.test.kmeans.k7$cluster, prop.chisq=TRUE)
conf_mat=abal7.test.ct.k7$t
accuracy <- sum(diag(conf_mat)) / sum(conf_mat)
error <- 1 - accuracy
accuracy
error <- 1 - accuracy
error
abal8<-abal6
abal8.rows= nrow(abal8)
abal8.sample=0.5
abal8.rowsnum= nrow(abal8)
abal8.rows= abal8.sample* abal8.rowsnum
abal8.rows
abal8.train.index= sample(abal8.rowsnum, abal8.rows)
length(abal8.train.index)
abal8.train= abal8[abal8.train.index,]
abal8.test= abal8[-abal8.train.index,]
abal8.train.k8= kmeans(abal8.train, centers=7)
abal8.train.k7
abal8.train.k7= kmeans(abal8.train, centers=7)
abal8.train.k7
abal8.test.k7= knn(abal8.train, abal8.test, abal8.train.k7$cluster, k=7)
abal8.test.k7= knn(abal8.train, abal8.test, abal8.train.k7$cluster, k=7)
abal8.test.k7
abal8.test.kmeans.k7= kmeans(abal8.test, centers=7)
abal8.test.kmeans.k7
abal8.test.k7.labels= abal8.test.kmeans.k7$cluster
abal8.test.k7.labels
abal8.train.glm= glm(formula=Rings~ Length + Diameter + Height + `Whole weight`+ `Viscera weight`+ `Shell weight`, family=gaussian, data=abal8.train)
summary(abal8.train.glm)
abal8.train.glm.anova= anova(abal8.train.glm, test="Chisq")
abal8.train.glm.anova
plot(abal8.train.glm)
abal8.test.pred= predict(abal8.train.glm, newdata= abal8.test)
abal8.test.pred
summary(abal8.test.pred)
confint(abal8.train.glm)
abal8.test.pred.k7= kmeans(abal8.test.pred, centers=7)
abal8.test.pred.k7
abal8.test.ct.k7= CrossTable(abal8.test.pred.k7$cluster, abal8.test.kmeans.k7$cluster, prop.chisq=TRUE)
conf_mat=abal8.test.ct.k7$t
accuracy <- sum(diag(conf_mat)) / sum(conf_mat)
error <- 1 - accuracy
accuracy
error
abal8.train.glm.anova
abal7.train.glm.anova
plot(abal7.train.glm)
plot(abal8.train.glm)
confint(abal7.train.glm)
confint(abal78.train.glm)
confint(abal8.train.glm)
abal7.test.pred
summary(abal7.test.pred)
abal8.test.pred
summary(abal8.test.pred)
plot(abal7.test$Rings, abal7.test.pred)
plot(abal8.test$Rings, abal8.test.pred)
