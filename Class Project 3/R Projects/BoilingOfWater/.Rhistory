getwd()
install.packages("tm")
library(tm)
Boiling<-VCorpus(DirSource(".", ignore.case=TRUE, mode="text"))
str(Boiling)
Boiling
btext<-Boiling[[1]]
btext
Boiling<-VCorpus(DirSource(".", ignore.case=TRUE, mode="text"))
str(Boiling)
Boiling
btext<-Boiling[[1]]
btext
btext[1]
Boiling<-VCorpus(DirSource(".", ignore.case=TRUE, mode="text"))
str(Boiling)
Boiling
btext<-Boiling[[1]]
btext
btext
btext[1]
getwd()
Boiling<-VCorpus(DirSource(".", ignore.case=TRUE, mode="text"))
str(Boiling)
Boiling
btext<-Boiling[[2]]
btext
btext[1]
BoilingDTM<-DocumentTermMatrix(Boiling)
BoilingDTM
BoilingDTM<-DocumentTermMatrix(Boiling[2])
BoilingDTM
inspect(BoilingDTM)
str(BoilingDTM)
BoilingTDM<-TermDocumentMatrix(Boiling[2])
BoilingTDM
Boilingdf<-data.frame(btext[1])
Boilingdf[1]
removeNumPunct<-function(x) gsub("[^[:alpha:][:space:]]*","",x)
removeNumPunct()
removeNumPunct
Boilingcl<- tm::tm_map(Boiling[2], content_transformer(removeNumPunct))
Boilingcl
str(Boilingcl)
inspect(Boilingcl)
BoilingLow<- tm_map(Boilingcl, tm::content_transformer(tolower))
BoilingLow
str(BoilingLow)
inspect(BoilingLow)
BoilingDTM<- DocumentTermMatrix(BoilingLow)
BoilingDTM
str(BoilingDTM)
inspect(BoilingDTM)
as.matrix(BoilingDTM)
myStopwords <- c(tm::stopwords("english"))
myStopwords
BoilingStop<- tm::tm
BoilingStop<- tm::tm_map(BoilingLow, tm::removeWords, myStopwords)
tm::inspect(BoilingStop[1])
tm::inspect(BoilingStop[[1]])
BoilingStopTDM <- tm::TermDocumentMatrix(BoilingStop)
BoilingStopTDM
freqTerms<- tm::findFreqTerms(BoilingStopTDM, lowfreq = 5)
freqTerms
nchar(freqTerms[3])
freqTermsp[3]
freqTerms[3]
Boilingtf <- tm::termFreq(BoilingStop[[1]])
Boilingtf
tm::inspect(BoilingStopTDM)
Boilingdf <- as.data.frame(BoilingStopTDM[[1]])
BoilingDist<- dist(Boilingdf)
BoilingDG <- hclust(BoilingDist, method="ward.D2")
str(BoilingDG)
plot(BoilingDG)
newStopWords
newStopWords <- c("even", "a", "will", "may", "soon", "can", "as", "one", "much", "just", "now", "quite", "merely", "shall", "take", "will", "certain", "well")
BoilingStopNew <- tm::tm_map(BoilingStop, tm::removeWords, newStopWords)
str(BoilingStopNew)
BoilingNewTDM <- tm::TermDocumentMatrix(BoilingStopNew)
Boilingdf2 <- as.data.frame(BoilingNewTDM[[1]])
BoilingDist2<- dist(Boilingdf2)
BoilingDG2 <- hclust(BoilingDist2, method="ward.D2")
plot(BoilingDG2)
words<- names(Boilingdf)
words
words<- names(Boilingtf)
words
wordsfreq= Boilingtf
pal<-brewer.pal(9, "BuGn")
install.packages("wordcloud")
library(wordcloud)
pal<-brewer.pal(9, "BuGn")
str(pal)
BoilingWC <- wordcloud(words, wordsfreq, colors=pal[-(1:4)])
str(BoilingWC)
pal2<-brewer.pal(9, "Spectral")
BoilingWC <- wordcloud(words, wordsfreq, colors=pal2)
install.packages("quanteda")
library(quanteda)
BoilingText <- Boilingcl[[1]]
BoilingText$content[1:10]
BoilingTokens >-quanteda::tokens(BoilingText$content[1:10])
BoilingTokens <-quanteda::tokens(BoilingText$content[1:10])
str(BoilingTokens)
BoilingDFM <-quanteda::dfm(BoilingTokens)
str(BoilingDFM)
BoilingDocFreq <-quanteda::docfreq(BoilingDFM)
str(BoilingDocFreq)
BoilingDocFreq
BoilingWeights<-quanteda::dfm_weight(BoilingDFM)
str(BoilingWeights)
BoilingWeights
BoilingTFIDF<-quanteda::dfm_tfidf(BoilingDFM, scheme_tf="count", scheme_df="inverse")
str(BoilingTFIDF)
install.packages("syuzhet")
library(syuzhet)
BoilingTextdf<- as.data.frame(BoilingText$content)
BoilingTextdf
BoilingAsString <- get_text_as_string("BoilingOfWater.txt")
BoilingAsString
BS<-get_sentences(BoilingAsString)
BS
str(BS)
BSSentiment<- get_sentiment(BS, "syuzhet")
BSSentiment
BSBing <- get_sentiment(BS, "bing")
BSBing
BSDictionary <- get_sentiment_dictionary()
BSDictionary
BSDictionaryBing <- get_sentiment_dictionary("bing")
BSDictionaryBing
BSSum <- sum(BSSentiment)
BSSum,
BSSum
BSBingSum<- sum(BSBing)
BSBingSum
BSMean <- mean(BSSentiment)
BSMean
BSBingMean<- mean(BSBing)
BSBingMean
plot(BSSentiment, main="BoilingOfWater Plot Trajectory", xlab="Narrative", ylab="Emotional Valence")
plot(BSBing, main="BoilingOfWater Plot Trajectory: Bing", xlab="Narrative", ylab="Emotional Valence")
BSSentimentPctValue <- get_percentage_values(BSSentiment, bins=10)
strucure(BSSentimentPctValue)
structure(BSSentimentPctValue)
plot(BSSentimentPctValue, main="BoilingOfWater PCTValue 10 Bins", xlab="Narrative", ylab="Emotional Valence", col="red")
BSSentimentPctValue <- get_percentage_values(BSSentiment, bins=20)
structure(BSSentimentPctValue)
plot(BSSentimentPctValue, main="BoilingOfWater PCTValue 10 Bins", xlab="Narrative", ylab="Emotional Valence", col="red")
