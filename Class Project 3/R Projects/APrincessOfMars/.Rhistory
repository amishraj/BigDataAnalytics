tfList[[i]] <- termFreq(POMStop[[i]])
}
print(tfList[[1]])
print(tfList[[9]])
tm::inspect(POMStopTDM)
q
POMStopTDM_rmSparse <- removeSparseTerms(POMStopTDM, 0.95)
tm::inspect(POMStopTDM_rmSparse)
POMStopTDM_rmSparse <- removeSparseTerms(POMStopTDM, 0.5)
tm::inspect(POMStopTDM_rmSparse)
POMStopTDM_rmSparse <- removeSparseTerms(POMStopTDM, 0.05)
tm::inspect(POMStopTDM_rmSparse)
POMStopTDM_rmSparse <- removeSparseTerms(POMStopTDM, 0.95)
tm::inspect(POMStopTDM_rmSparse)
POMStopTDM_rmSparse <- removeSparseTerms(POMStopTDM, 0.95)
tm::inspect(POMStopTDM_rmSparse)
POMStopTDM_rmSparse <- removeSparseTerms(POMStopTDM, 0.05)
tm::inspect(POMStopTDM_rmSparse)
POMStopTDM_rmSparse <- removeSparseTerms(POMStopTDM, 0.15)
tm::inspect(POMStopTDM_rmSparse)
POMStopTDM_rmSparse <- removeSparseTerms(POMStopTDM, 0.1)
tm::inspect(POMStopTDM_rmSparse)
POMStopTDM_rmSparse <- removeSparseTerms(POMStopTDM, 0.08)
tm::inspect(POMStopTDM_rmSparse)
POMStopTDM_rmSparse <- removeSparseTerms(POMStopTDM, 0.09)
tm::inspect(POMStopTDM_rmSparse)
POMStopTDM_rmSparse <- removeSparseTerms(POMStopTDM, 0.1)
tm::inspect(POMStopTDM_rmSparse)
POMStopTDM_rmSparse <- removeSparseTerms(POMStopTDM, 0.90)
tm::inspect(POMStopTDM_rmSparse)
POMStopTDM_rmSparse <- removeSparseTerms(POMStopTDM, 0.70)
tm::inspect(POMStopTDM_rmSparse)
POMdf<- as.data.frame(POMStopTDM)
POMdf<- as.data.frame(POMStopTDM[[1]])
POMdist<- dist(POMdf)
POMDG<- hclust(POMDist, method="ward.D2")
POMDG<- hclust(POMdist, method="ward.D2")
str(POMDG)
plot(POMDG)
POMStopTDM_rmSparse <- removeSparseTerms(POMStopTDM, 0.50)
tm::inspect(POMStopTDM_rmSparse)
POMStopTDM_rmSparse <- removeSparseTerms(POMStopTDM, 0.20)
tm::inspect(POMStopTDM_rmSparse)
POMStopTDM_rmSparse <- removeSparseTerms(POMStopTDM, 0.11)
tm::inspect(POMStopTDM_rmSparse)
POMStopTDM_rmSparse <- removeSparseTerms(POMStopTDM, 0.11)
POMStopTDM_rmSparse <- removeSparseTerms(POMStopTDM, 0.10)
tm::inspect(POMStopTDM_rmSparse)
POMStopTDM_rmSparse <- removeSparseTerms(POMStopTDM, 0.1)
tm::inspect(POMStopTDM_rmSparse)
POMStopTDM_rmSparse <- removeSparseTerms(POMStopTDM, 0.09)
tm::inspect(POMStopTDM_rmSparse)
POMdf<- as.data.frame(POMStopTDM[[1]])
POMdist<- dist(POMdf)
POMDG<- hclust(POMdist, method="ward.D2")
str(POMDG)
plot(POMDG)
POMStopTDM_rmSparse <- removeSparseTerms(POMStopTDM, 0.01)
POMStopTDM_rmSparse
POMStopTDM_rmSparse <- removeSparseTerms(POMStopTDM, 0.001)
POMStopTDM_rmSparse
POMStopTDM_rmSparse <- removeSparseTerms(POMStopTDM, 0.0001)
POMStopTDM_rmSparse
POMStopTDM_rmSparse <- removeSparseTerms(POMStopTDM[[1]], 0.0001)
POMStopTDM_rmSparse <- removeSparseTerms(POMStopTDM[1, 0.0001)
POMStopTDM_rmSparse <- removeSparseTerms(POMStopTDM[1], 0.0001)
POMStopTDM_rmSparse <- removeSparseTerms(POMStopTDM, 0.95)
POMStopTDM_rmSparse
POMDG<- hclust(POMdist, method="complete")
plot(POMDG)
plot(POMDG, labels = NULL, hang = 0.1, check = TRUE,
axes = TRUE, frame.plot = FALSE, ann = TRUE,
main = "Cluster Dendrogram",
sub = NULL, xlab = NULL, ylab = "Height", ...)
plot(POMDG, labels = NULL, hang = 0.1, check = TRUE,
axes = TRUE, frame.plot = FALSE, ann = TRUE,
main = "Cluster Dendrogram",
sub = NULL, xlab = NULL, ylab = "Height")
)
plot(POMDG, labels = NULL, hang = 0.1, check = TRUE,
axes = TRUE, frame.plot = FALSE, ann = TRUE,
main = "Cluster Dendrogram",
sub = NULL, xlab = NULL, ylab = "Height")
getwd()
POMSentences <- tidyPOM %>% unnest_tokens(sentence, text, token = "regex", pattern = "(?<!\\.)\\s+(?=[A-Z])") %>% select(id, sentence) %>% mutate(sentence_length= nchar(sentence)) %>% arrange(desc(sentence_length))
POMSentences <- tidyPOM %>% unnest_tokens(sentence, text, token = "regex", pattern = "(?<!\\b\\p{L}r)\\.") %>% select(id, sentence) %>% mutate(sentence_length= nchar(sentence)) %>% arrange(desc(sentence_length))
POMSentences
sentences_table <- bind_rows(
slice(select(POMSentencesCh1, sentence), 1:10),
slice(select(POMSentencesCh2, sentence), 1:10),
slice(select(POMSentencesCh3, sentence), 1:10),
slice(select(POMSentencesCh4, sentence), 1:10),
slice(select(POMSentencesCh5, sentence), 1:10),
slice(select(POMSentencesCh6, sentence), 1:10),
slice(select(POMSentencesCh7, sentence), 1:10),
slice(select(POMSentencesCh8, sentence), 1:10),
slice(select(POMSentencesCh9, sentence), 1:10),
slice(select(POMSentencesCh10, sentence), 1:10),
slice(select(POMSentencesCh11, sentence), 1:10)
)
sentences_table
POMSentencesCh1
POMSentencesCh2
POMSentencesCh3
POMSentencesCh4
POMSentencesCh5
POMSentencesCh6
POMSentencesCh7
POMSentencesCh8
POMSentencesCh9
POMSentencesCh10
POMSentencesCh11
POM <- tm_map(POM, content_transformer(gsub), pattern = "'", replacement = "")
quotes_present <- sapply(POM, function(doc) grepl("'", doc$content))
names(quotes_present)[quotes_present]
quotes_present
grep("'", POM, value = TRUE)
inspect(POM)
POMcl <- tm::tm_map(POM, content_transformer(removeNumPunct))
inspect(POMcl)
POMcl <- tm::tm_map(POM, content_transformer(removeNumPunct))
POMLow<- tm_map(POMcl, tm::content_transformer(tolower))
POM_DTM <- DocumentTermMatrix(POMLow)
POMStop <- tm::tm_map(POMLow, tm::removeWords, myStopwords)
POMStopTDM <- tm::TermDocumentMatrix(POMStop)
freqTerms <- tm::findFreqTerms(POMStopTDM, lowfreq=5)
cat("Number of frequent terms:", length(freqTerms), "\n")
length(freqTerms)
nchar(freqTerms[5])
termFreq <- sort(colSums(as.matrix(POMStopTDM)), decreasing = TRUE)
barplot(termFreq[1:20], main="Most frequent terms", xlab="Term", ylab="Frequency", col="steelblue")
POMtf <- tm::termFreq(POMStop)
termFreq <- sort(colSums(as.matrix(POMStopTDM[[1]])), decreasing = TRUE)
barplot(termFreq[1:20], main="Most frequent terms", xlab="Term", ylab="Frequency", col="steelblue")
termFreq <- sort(colSums(as.matrix(POMStopTDM[1])), decreasing = TRUE)
tm::inspect(POMStop)
tm::inspect(POMStopTDM)
POMdf<- as.data.frame(POMStopTDM[[1]])
POMdist<- dist(POMdf)
POMDG<- hclust(POMdist, method="ward.D2")
str(POMDG)
plot(POMDG)
POMStopTDM[[1]]
POMStopTDM
inspect(POMStopTDM)
as.matrix(POMStopTDM)
POMdf<- as.data.frame(as.matrix(POMStopTDM))
> POMdist<- dist(POMdf)
POMdf<- as.data.frame(as.matrix(POMStopTDM))
POMdist<- dist(POMdf)
POMDG<- hclust(POMdist, method="ward.D2")
str(POMDG)
plot(POMDG)
POMStopTDM_rmSparse <- removeSparseTerms(POMStopTDM, 0.09)
tm::inspect(POMStopTDM_rmSparse)
POMdf<- as.data.frame(as.matrix(POMStopTDM_rmSparse))
POMdist<- dist(POMdf)
POMDG<- hclust(POMdist, method="ward.D2")
str(POMDG)
plot(POMDG)
POMStopTDM_rmSparse <- removeSparseTerms(POMStopTDM, 0.5)
tm::inspect(POMStopTDM_rmSparse)
POMdf<- as.data.frame(as.matrix(POMStopTDM_rmSparse))
POMdist<- dist(POMdf)
POMDG<- hclust(POMdist, method="ward.D2")
str(POMDG)
plot(POMDG)
POMStopTDM_rmSparse <- removeSparseTerms(POMStopTDM, 0.95)
tm::inspect(POMStopTDM_rmSparse)
POMdf<- as.data.frame(as.matrix(POMStopTDM_rmSparse))
POMdist<- dist(POMdf)
POMDG<- hclust(POMdist, method="ward.D2")
str(POMDG)
plot(POMDG)
POMStopTDM_rmSparse <- removeSparseTerms(POMStopTDM, 0.4)
tm::inspect(POMStopTDM_rmSparse)
POMdf<- as.data.frame(as.matrix(POMStopTDM_rmSparse))
POMdist<- dist(POMdf)
POMDG<- hclust(POMdist, method="ward.D2")
str(POMDG)
plot(POMDG)
install.packages("wordcloud")
library(wordcloud)
POMtf<- tm::termFreq(as.matrix(POMStop))
POMtf<- tm::termFreq(POMStop)
tfList
words <- unique(unlist(lapply(tfList, names)))
words
pal <- brewer.pal(9, "BuGn")
str(pal)
allFreqs <- unlist(lapply(tfList, function(x) x/sum(x)))
allTerms <- unlist(tfList)
allFreqs <- unlist(lapply(tfList, function(x) x/sum(x)))
sortedInd <- order(allFreqs, decreasing = TRUE)
allTerms <- allTerms[sortedInd]
allFreqs <- allFreqs[sortedInd]
wordcloud(allTerms, allFreqs, colors = pal[-(1:4)])
totalFreq <- sapply(words, function(x) sum(sapply(tfList, function(y) y[x])))
wordcloud(words, totalFreq, colors = pal[-(1:4)])
tf_df_list <- lapply(tfList, function(x) {
df <- data.frame(word=names(x), freq=x, stringsAsFactors=FALSE)
return(df)
})
all_tf_df <- do.call(rbind, tf_df_list)
wordcloud(all_tf_df$word, all_tf_df$freq, colors=pal[-(1:4)])
warnings()
POMtf
POMtfCh1<- termFreq(POMStop[[1]])
words <- names(termFreq)
words <- unique(unlist(lapply(tfList, names)))
wordsCh1 <- names(termFreq)
wordcloud(wordsCh1, POMtfCh1, colors = pal[-(1:4)])
wordcloud(wordsCh1, POMtfCh1, colors = pal[-(1:4)])
POMtfCh1<- termFreq(POMStop[[1]][1])
ptext<- POMStop[[1]]
ptexr
ptext
POMtfCh1<- termFreq(ptext[1])
corpus_tf <- Reduce(`+`, tfList)
tf_all <- do.call(rbind, tfList)
tfList <- lapply(POMStop, tm::termFreq)
totalTf <- Reduce(function(x, y) merge(x, y, by = "term", all = TRUE),
lapply(tfList, data.frame), accumulate = FALSE)
tfList <- list()
for (i in seq_along(POMStop)) {
tfList[[i]] <- termFreq(POMStop[[i]])
}
tfList
combined_tf <- Reduce(`+`, tfList)
corpusTF <- colSums(tfList)
corpusTF <- colSums(do.call(cbind, tfList))
corpusTF <- colSums(tfList)
str(tfList)
corpus_tf <- Reduce(`+`, tfList)
# Create an empty frequency vector for the entire corpus
corpusTF <- rep(0, length(words))
# Loop through the documents to add the term frequency values to the appropriate elements in the corpus vector
for (i in 1:length(tfList)) {
docTF <- unname(unlist(tfList[[i]])) # Get the term frequency vector for the current document
docWords <- names(tfList[[i]]) # Get the words for the current document
# Add the term frequency values to the appropriate elements in the corpus vector
for (j in 1:length(docWords)) {
wordIndex <- match(docWords[j], words)
corpusTF[wordIndex] <- corpusTF[wordIndex] + docTF[j]
}
}
corpusTF
# Combine the term frequencies for all documents
allTF <- unlist(tfList)
# Create a new term frequency variable with both words and term frequencies
combinedTF <- data.frame(word = names(allTF), frequency = unname(allTF))
# Order the terms by frequency in descending order
combinedTF <- combinedTF[order(-combinedTF$frequency),]
combinedTF
# Combine the term frequencies for all documents
allTF <- unlist(tfList)
# Create a new term frequency variable with both words and term frequencies
combinedTF <- data.frame(word = names(allTF), frequency = unname(allTF))
str(combinedTF)
tf_combined <- unlist(tfList)
tf_combined
tfList
tf_combined
words<- names(tf_combined)
words
tf_combined <- unlist(tfList)
words<- names(tf_combined)
words
tf_combined <- unlist(tfList)
tf_summed <- tapply(tf_combined, names(tf_combined), sum)
tf_summed
tf_combined <- unlist(tfList)
tf_summed <- tapply(tf_combined, names(tf_combined), sum)
words<- names(tf_summed)
words
pal <- brewer.pal(9, "BuGn")
str(pal)
POMWC <- wordcloud(words, tf_summed, colors=pal[-(1:4)])
warnings()
POMWC <- wordcloud(words, tf_summed, scale=c(4, 0.5), colors=pal[-(1:4)])
POMWC <- wordcloud(words, tf_summed, min.freq = 10, colors=pal[-(1:4)])
POMWC <- wordcloud(words, tf_summed, scale=c(4, 0.5), min.freq = 10, colors=pal[-(1:4)])
install.packages("quanteda")
library(quanteda)
POMcl
POMtext<- POMcl[[1]]
POMtext$content
POMtext<- POMcl[[1]]
POMtext$content[1:10]
POMtext <- sapply(POMcl, function(x) x$content)
POMTokens <- quanteda::tokens(unlist(POMtext))
POMTokens
POMTokens <- lapply(POMcl, function(x) quanteda::tokens(x$content))
POMTokens
str(POMTokens)
POMTokens <- lapply(POMcl, function(x) quanteda::tokens(x$content))
POMDFM<- quanteda::dfm(POMTokens)
str(POMTokens[[1]])
combinedTokens <- c(POMTokens[[1]], POMTokens[[2]], POMTokens[[3]], POMTokens[[4]], POMTokens[[5]], POMTokens[[6]], POMTokens[[7]], POMTokens[[8]], POMTokens[[9]], POMTokens[[10]], POMTokens[[11]])
dup_docs <- duplicated(docnames(POMTokens))
combinedTokens <- rbind(POMTokens[[1]], POMTokens[[2]], POMTokens[[3]], POMTokens[[4]], POMTokens[[5]], POMTokens[[6]], POMTokens[[7]], POMTokens[[8]], POMTokens[[9]], POMTokens[[10]], POMTokens[[11]])
POMtext <- paste(POMcl$content, collapse = " ")
POMTokens <- quanteda::tokens(POMtext)
str(POMTokens)
POMTokens <- lapply(POMcl, function(x) quanteda::tokens(x$content))
str(POMTokens)
POMTokens[[1]]
POMDFM<- quanteda::dfm(POMTokens[[1]])
POMDFMCh1<- quanteda::dfm(POMTokens[[1]])
POMDFMCh1<- quanteda::dfm(POMTokens[[1]])
POMDFMCh2<- quanteda::dfm(POMTokens[[1]])
POMDFMCh3<- quanteda::dfm(POMTokens[[1]])
POMDFMCh4<- quanteda::dfm(POMTokens[[1]])
POMDFMCh5<- quanteda::dfm(POMTokens[[1]])
POMDFMCh6<- quanteda::dfm(POMTokens[[1]])
POMDFMCh7<- quanteda::dfm(POMTokens[[1]])
POMDFMCh8<- quanteda::dfm(POMTokens[[1]])
POMDFMCh9<- quanteda::dfm(POMTokens[[1]])
POMDFMCh10<- quanteda::dfm(POMTokens[[1]])
POMDFMCh11<- quanteda::dfm(POMTokens[[1]])
str(POMDFMCh1)
POMDFMCh1<- quanteda::dfm(POMTokens[[1]], remove = myStopwords)
POMDFMCh2<- quanteda::dfm(POMTokens[[2]], remove = myStopwords)
POMDFMCh3<- quanteda::dfm(POMTokens[[3]], remove = myStopwords)
POMDFMCh4<- quanteda::dfm(POMTokens[[4]], remove = myStopwords)
POMDFMCh5<- quanteda::dfm(POMTokens[[5]], remove = myStopwords)
POMDFMCh6<- quanteda::dfm(POMTokens[[6]], remove = myStopwords)
POMDFMCh7<- quanteda::dfm(POMTokens[[7]], remove = myStopwords)
POMDFMCh8<- quanteda::dfm(POMTokens[[8]], remove = myStopwords)
POMDFMCh9<- quanteda::dfm(POMTokens[[9]], remove = myStopwords)
POMDFMCh10<- quanteda::dfm(POMTokens[[10]], remove = myStopwords)
POMDFMCh11<- quanteda::dfm(POMTokens[[11]], remove = myStopwords)
POMDFMCh1<- quanteda::dfm(POMTokens[[1]], dfm_remove = myStopwords)
POMDFMCh2<- quanteda::dfm(POMTokens[[2]], remove = myStopwords)
POMDFMCh3<- quanteda::dfm(POMTokens[[3]], remove = myStopwords)
POMDFMCh4<- quanteda::dfm(POMTokens[[4]], remove = myStopwords)
POMDFMCh5<- quanteda::dfm(POMTokens[[5]], remove = myStopwords)
POMDFMCh6<- quanteda::dfm(POMTokens[[6]], remove = myStopwords)
POMDFMCh7<- quanteda::dfm(POMTokens[[7]], remove = myStopwords)
POMDFMCh8<- quanteda::dfm(POMTokens[[8]], remove = myStopwords)
POMDFMCh9<- quanteda::dfm(POMTokens[[9]], remove = myStopwords)
POMDFMCh10<- quanteda::dfm(POMTokens[[10]], remove = myStopwords)
POMDFMCh11<- quanteda::dfm(POMTokens[[11]], remove = myStopwords)
POMDFMCh1<- quanteda::dfm(POMTokens[[1]]) %>% dfm_remove(myStopwords)
POMDFMCh2<- quanteda::dfm(POMTokens[[2]]) %>% dfm_remove(myStopwords)
POMDFMCh3<- quanteda::dfm(POMTokens[[3]]) %>% dfm_remove(myStopwords)
POMDFMCh4<- quanteda::dfm(POMTokens[[4]]) %>% dfm_remove(myStopwords)
POMDFMCh5<- quanteda::dfm(POMTokens[[5]]) %>% dfm_remove(myStopwords)
POMDFMCh6<- quanteda::dfm(POMTokens[[6]]) %>% dfm_remove(myStopwords)
POMDFMCh7<- quanteda::dfm(POMTokens[[7]]) %>% dfm_remove(myStopwords)
POMDFMCh8<- quanteda::dfm(POMTokens[[8]]) %>% dfm_remove(myStopwords)
POMDFMCh9<- quanteda::dfm(POMTokens[[9]]) %>% dfm_remove(myStopwords)
POMDFMCh10<- quanteda::dfm(POMTokens[[10]]) %>% dfm_remove(myStopwords)
POMDFMCh11<- quanteda::dfm(POMTokens[[11]]) %>% dfm_remove(myStopwords)
str(POMDFMCh2)
POMDocFreq_Ch1<- quanteda::docfreq(POMDFM)
POMDocFreq_Ch1<- quanteda::docfreq(POMDFM)
POMDocFreq_Ch2<- quanteda::docfreq(POMDFM)
POMDocFreq_Ch3<- quanteda::docfreq(POMDFM)
POMDocFreq_Ch4<- quanteda::docfreq(POMDFM)
POMDocFreq_Ch5<- quanteda::docfreq(POMDFM)
POMDocFreq_Ch6<- quanteda::docfreq(POMDFM)
POMDocFreq_Ch7<- quanteda::docfreq(POMDFM)
POMDocFreq_Ch8<- quanteda::docfreq(POMDFM)
POMDocFreq_Ch9<- quanteda::docfreq(POMDFM)
POMDocFreq_Ch10<- quanteda::docfreq(POMDFM)
POMDocFreq_Ch11<- quanteda::docfreq(POMDFM)
str(POMDocFreq_Ch5)
str(POMDocFreq_Ch6)
str(POMDocFreq_Ch9)
POMDocFreq_Ch1<- quanteda::docfreq(POMDFMCh1)
POMDocFreq_Ch2<- quanteda::docfreq(POMDFMCh2)
POMDocFreq_Ch3<- quanteda::docfreq(POMDFMCh3)
POMDocFreq_Ch4<- quanteda::docfreq(POMDFMCh4)
POMDocFreq_Ch5<- quanteda::docfreq(POMDFMCh5)
POMDocFreq_Ch6<- quanteda::docfreq(POMDFMCh6)
POMDocFreq_Ch7<- quanteda::docfreq(POMDFMCh7)
POMDocFreq_Ch8<- quanteda::docfreq(POMDFMCh8)
POMDocFreq_Ch9<- quanteda::docfreq(POMDFMCh9)
POMDocFreq_Ch10<- quanteda::docfreq(POMDFMCh10)
POMDocFreq_Ch11<- quanteda::docfreq(POMDFMCh11)
str(POMDocFreq_Ch5)
POMDocFreq_Ch5
POMWeights_Ch1 <- quanteda::dfm_weight(POMDFMCh1)
POMWeights_Ch2 <- quanteda::dfm_weight(POMDFMCh2)
POMWeights_Ch3 <- quanteda::dfm_weight(POMDFMCh3)
POMWeights_Ch4 <- quanteda::dfm_weight(POMDFMCh4)
POMWeights_Ch5 <- quanteda::dfm_weight(POMDFMCh5)
POMWeights_Ch6 <- quanteda::dfm_weight(POMDFMCh6)
POMWeights_Ch7 <- quanteda::dfm_weight(POMDFMCh7)
POMWeights_Ch8 <- quanteda::dfm_weight(POMDFMCh8)
POMWeights_Ch9 <- quanteda::dfm_weight(POMDFMCh9)
POMWeights_Ch10 <- quanteda::dfm_weight(POMDFMCh10)
POMWeights_Ch11 <- quanteda::dfm_weight(POMDFMCh11)
str(POMWeights_Ch1)
POMWeights_Ch1
POMTFIDF_Ch1<- quanteda::dfm_tfidf(POMDFMCh1, scheme_tf = "count", scheme_df = "inverse")
POMTFIDF_Ch2<- quanteda::dfm_tfidf(POMDFMCh2, scheme_tf = "count", scheme_df = "inverse")
POMTFIDF_Ch3<- quanteda::dfm_tfidf(POMDFMCh3, scheme_tf = "count", scheme_df = "inverse")
POMTFIDF_Ch4<- quanteda::dfm_tfidf(POMDFMCh4, scheme_tf = "count", scheme_df = "inverse")
POMTFIDF_Ch5<- quanteda::dfm_tfidf(POMDFMCh5, scheme_tf = "count", scheme_df = "inverse")
POMTFIDF_Ch6<- quanteda::dfm_tfidf(POMDFMCh6, scheme_tf = "count", scheme_df = "inverse")
POMTFIDF_Ch7<- quanteda::dfm_tfidf(POMDFMCh7, scheme_tf = "count", scheme_df = "inverse")
POMTFIDF_Ch8<- quanteda::dfm_tfidf(POMDFMCh8, scheme_tf = "count", scheme_df = "inverse")
POMTFIDF_Ch9<- quanteda::dfm_tfidf(POMDFMCh9, scheme_tf = "count", scheme_df = "inverse")
POMTFIDF_Ch10<- quanteda::dfm_tfidf(POMDFMCh10, scheme_tf = "count", scheme_df = "inverse")
POMTFIDF_Ch11<- quanteda::dfm_tfidf(POMDFMCh11, scheme_tf = "count", scheme_df = "inverse")
str(POMTFIDF_Ch1)
install.packages("syuzhet")
library(syuzhet)
POMText
POMText<- unlist(POMcl)
POMText
POMText[1:10]
POMcl
POMchapters <- lapply(POMcl, function(x) x$content)
POMText <- paste(POMchapters, collapse = " ")
POMText[1:10]
POMText$content[1:10]
POMText <- paste(sapply(POMcl, function(x) x$content), collapse = " ")
POMText$content[1:10]
POMTextCh1<- POMcl[[1]]
POMTextCh1$content[1:10]
POMTextCh1$content[10:1]
content_list <- lapply(POMcl, function(x) x$content)
POMTextCombined <- paste(content_list, collapse = " ")
POMTextCombined$content
str(POMcl[[1]])
POMTextCh1<- POMcl[[1]]
POMTextCh1$content[1:10]
POMTextdf<- as.data.frame(POMcl[[1]]$content)
POMTextdf
POMAsString<- get_text_as_string("APrincessOfMars.txt")
POMAsString
POMS<- get_sentences(POMAsString)
POMS
POMS<- get_sentences(POMAsString)
POMS[1:10]
str(POMS)
POMSSentiment<- get_sentiment(POMS, "syuzhet")
POMSSentiment
POMSBing<- get_sentiment(POMS, "bing")
POMSBing
POMSAfinn<- get_sentiment(POMS, "afinn")
POMSAfinn
POMSnrc<- get_sentiment(POMS, "nrc")
POMSnrc
POMSStanford<- get_sentiment(POMS, "stanford")
POMSDictionary<- get_sentiment_dictionary()
POMSDictionary
POMSDictionaryBing<- get_sentiment_dictionary("bing")
POMSDictionaryBing
POMSDictionaryBing<- get_sentiment_dictionary("nrc")
POMSDictionaryBing<- get_sentiment_dictionary("bing")
POMSDictionaryNrc<- get_sentiment_dictionary("nrc")
POMSDictionaryNrc
POMSDictionaryAfinn<- get_sentiment_dictionary("afinn")
POMSDictionaryAfinn
POMSSum<- sum(POMSSentiment)
POMSSum
POMSBingSum<- sum(POMSBing)
POMSBingSum
POMSAfinnSum<- sum(POMSAfinn)
POMSAfinnSum
POMSNrcSum<- sum(POMSnrc)
POMSNrcSum
summary(POMSSentiment)
POMSmean<- mean(POMSSentiment)
POMSmean
summary(POMSSentiment)
summary(POMSBing)
summary(POMSAfinn)
summary(POMSnrc)
plot(POMSSentiment, main="A Princess of Mars Plot Trajectory", xlab="Narrative", ylab="Emotional Valence")
plot(POMSBing, main="A Princess of Mars Plot Trajectory: Bing", xlab="Narrative", ylab="Emotional Valence")
plot(POMSSentiment)
plot(POMSBing, main="A Princess of Mars Plot Trajectory: Bing", xlab="Narrative", ylab="Emotional Valence", dpi = 300)
plot(POMSAfinn, main="A Princess of Mars Plot Trajectory: Afinn", xlab="Narrative", ylab="Emotional Valence")
plot(POMSAfinn, main="A Princess of Mars Plot Trajectory: Afinn", xlab="Narrative", ylab="Emotional Valence")
plot(POMSnrc, main="A Princess of Mars Plot Trajectory: NRC", xlab="Narrative", ylab="Emotional Valence")
POMSSentimentPctValue <- get_percentage_values(POMSSentiment, bins=10)
structure(POMSSentimentPctValue)
plot(POMSSentimentPctValue, main="APrincessOfMars PCT Value 10 Bins", xlab="Narrative", ylab = "emotional valence", col="red")
xlim <- c(0, 10)
plot(POMSSentimentPctValue, main="APrincessOfMars PCT Value 10 Bins", xlab="Narrative", ylab = "emotional valence", col="red", xlim=xlim)
ylim <- c(0, 80)
plot(POMSSentimentPctValue, main="APrincessOfMars PCT Value 10 Bins", xlab="Narrative", ylab = "emotional valence", col="red", xlim=xlim, ylim=ylim)
ylim <- c(0, 0.5)
plot(POMSSentimentPctValue, main="APrincessOfMars PCT Value 10 Bins", xlab="Narrative", ylab = "emotional valence", col="red", xlim=xlim, ylim=ylim)
POMSSentimentPctValue <- get_percentage_values(POMSSentiment, bins=20)
plot(POMSSentimentPctValue, main="APrincessOfMars PCT Value 10 Bins", xlab="Narrative", ylab = "emotional valence", col="red")
POMSSentimentPctValue <- get_percentage_values(POMSSentiment, bins=50)
plot(POMSSentimentPctValue, main="APrincessOfMars PCT Value 10 Bins", xlab="Narrative", ylab = "emotional valence", col="red")
POMSSentimentPctValue <- get_percentage_values(POMSSentiment, bins=1000)
plot(POMSSentimentPctValue, main="APrincessOfMars PCT Value 10 Bins", xlab="Narrative", ylab = "emotional valence", col="red")
kwic(POMcl)
str(POMcl)
kwic(POMTokens)
kwic(POMTokens[[1]])
kwic(POMTokens[[1]], pattern="mars")
kwic(POMTokens[[2]], pattern="mars")
kwic(POMTokens[[3]], pattern="mars")
kwic(POMTokens[[4]], pattern="mars")
summary(POMcl)
quanteda::summary.corpus(POMcl)
quanteda::summary(POMcl)
quanteda::summary(POMcl)
save.image("~/Documents/Study/Big Data Analytics/Class Project 3/R Projects/APrincessOfMars/APrincessOfMars.RData")
POMStopTDM_rmSparse <- removeSparseTerms(POMStopTDM, 0.4)
library(tm)
POMStopTDM_rmSparse <- removeSparseTerms(POMStopTDM, 0.4)
tm::inspect(POMStopTDM_rmSparse)
